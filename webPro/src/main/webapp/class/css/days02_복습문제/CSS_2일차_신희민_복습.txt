
2.  버튼 3개 선언 후 클릭 이벤트 처리해서 경고창을 띄우세요.. 
  ㄱ. onclick 속성

<ul>
	<li><a href="#" onclick="alert('버튼1을 클릭했습니다.')">버튼1</a></li>
	<li><a href="#" onclick="alert('버튼2을 클릭했습니다.')">버튼2</a></li>
	<li><a href="#" onclick="alert('버튼3을 클릭했습니다.')">버튼3</a></li>
</ul>		


  ㄴ. js 동적으로 이벤트 등록

<button id="Button1">버튼1</button>
<button id="Button2">버튼2</button>
<button id="Button3">버튼3</button>

<script>
	var button1 = document.getElementById('Button1');
	var button2 = document.getElementById('Button2');
	var button3 = document.getElementById('Button3');

	button1.onclick = function(){
		alert('버튼1을 눌렀습니다.');
	}
	button2.onclick = function(){
		alert('버튼2를 눌렀습니다.');
	}
	button3.onclick = function(){
		alert('버튼3을 눌렀습니다.');
	}
</script>


  ㄷ. jquery 사용

<button id="Button1">버튼1</button>
<button id="Button2">버튼2</button>
<button id="Button3">버튼3</button>

<script>
	$("#Button1").click(function(){
		alert('버튼1을 눌렀습니다.');
	});
	$("#Button2").click(function(){
		alert('버튼2를 눌렀습니다.');
	});
	$("#Button3").click(function(){
		alert('버튼3을 눌렀습니다.');
	});
</script>


3. 위의 버튼이 클릭되면 class 속성을 active 로 설정 후 임의의 스타일 지정

<style>
li a.active{
	background-color: dodgerblue; 
	color : white; 
}
</style>

<body> 
<ul>
	<li><a href="#">버튼1</a></li>
	<li><a href="#">버튼2</a></li>
	<li><a href="#">버튼3</a></li>
</ul>		
</body>

<script>
	$("li a ").click(function()  { 
		$("li a").not(this).removeClass("active") ;
		$(this).addClass("active"); 
	} ); 
</script>


4.   document.querySelectorAll("button")
      document.querySelector("button") 
    위의 두 함수와 코딩에 대해서 설명하세요.
    
document.querySelectorAll(선택자)과 document.querySelector(선택자)은 둘 다 DOM 요소를 선택하는 함수이다.
document.querySelectorAll("button") 함수는 주어진 선택자(button)에 일치하는 모든 요소를 반환한다. 
반면, document.querySelector("button") 함수는 주어진 선택자에 일치하는 첫 번째 요소를 반환하고
일치하는 요소가 없으면 null을 반환한다.


5. tr:hover:not(:first-child){
     background-color: #4caf50;
  }
  코딩에 대해서 설명하세요.  

:hover로 인해 마우스 커서가 <tr> 요소 위에 올라갔을 때, 
해당 <tr> 요소의 배경 색상이 녹색으로 변경된다.  
:not(:first-child)는 첫 번째 자식 요소를 제외한 모든 자식 요소에 대해 스타일이 적용되도록 한다. 
즉, 첫 번째 <tr> 요소는 배경 색상이 변경되지 않는다.
 

6. display="none"          
   visibility="hidden"     
   위의 두 속성의 차이점을 설명하세요.

 : display="none"은 해당 요소를 완전히 제거하는 반면, 
   visibility="hidden"은 요소를 숨기고 공간을 유지한다.


7. jquery  메서드 설명
ㄱ. css()
: 선택한 요소에 CSS 속성을 설정하거나 반환한다. 
이 메서드를 사용하여 요소의 스타일을 변경할 수 있다.

ㄴ. show()
: 선택한 요소를 화면에 보여준다. 
이 메서드를 사용하여 숨겨진 요소를 보이게 할 수 있다.

ㄷ. hide(): 
선택한 요소를 화면에서 숨긴다. 

ㄹ. toggle()
: 선택한 요소를 표시하거나 숨기는 토글 기능을 수행한다. 
즉 요소의 표시/숨김 상태를 번갈아가며 전환할 수 있다.

ㅁ. slideToggle()
: 선택한 요소를 슬라이드 애니메이션과 함께 표시하거나 숨기는 토글 기능을 수행한다. 
슬라이딩되는 애니메이션 효과를 적용한 후 요소의 표시/숨김 상태를 전환할 수 있다.

ㅂ. addClass()
: 선택한 요소에 클래스를 추가한다. 
 새로운 스타일을 적용하거나, 기존의 스타일을 변경할 수 있다.

ㅅ. removeClass()
: 선택한 요소에서 클래스를 제거한다. 
요소에서 더 이상 필요하지 않은 스타일을 제거하거나, 기존 스타일을 변경할 수 있다.
  


8.  position(위치) 속성에 대해 설명하세요.
  ㄱ. static 
: 요소가 문서의 일반적인 흐름에 따라 배치된다. top, right, bottom, left 속성을 사용할 수 없다.  

  ㄴ. relative 
: 요소가 자신이 위치해야 하는 기본 위치를 기준으로 배치된다. top, right, bottom, left 속성을 사용할 수 있다. 

  ㄷ. fixed  
: 브라우저 창을 기준으로 위치를 지정해 배치하며 페이지가 스크롤 되더라도 항상 같은 위치를 유지한다.   

  ㄹ. absolute  
: relative 값을 사용한 상위 요소를 기준으로 위치를 지정해 배치한다. 
즉 가장 가까운 조상 요소 중 속성 값이 static이 아닌 요소를 기준으로 배치되며 
만약 그런 요소가 없으면 문서의 body를 기준으로 배치된다.

  ㅁ. sticky  
: 사용자가 스크롤한 위치에 따라 위치가 바뀌며 top, right, bottom, left 속성을 사용할 수 있다.   


9-1. [ DOM ]을  사용해서 (js를 사용) <button> 요소를 10개 동적으로 생성하고
      버튼을 클릭하면 숨기도록 코딩하세요..
<script>
	for(var i = 1; i <= 10; i++) {
		var button = document.createElement("button");
		button.innerHTML = "Button " + i;
		document.body.appendChild(button);
		
		button.onclick = function() {
			this.style.display="none";
		}
	}
</script>

9-2. 위의 문제8번을 jquery로 코딩해 보세요...

모르게씀 ㅠㅠ 


10-1. 아래 코딩에 대해서 각 라인 별로 주석을 달아서 설명하세요 

<div class="topnav">
   <a href="#">Button1</a>
   <!-- topnav이라는 클래스를 가진 네비게이션 div를 만들어 
  <a> 태그를 활용해 클릭할 수 있는 4개의 버튼을 구현한다 -->

   <a href="#">Button2</a>
   <a href="#"  class="active">Button3</a>
<!--  세번째 버튼에 클릭한 상태임을 의미하는 active 클래스를 지정해준다 -->
   <a href="#">Button4</a>
</div>

<script>                                                                        
  var links = document.querySelectorAll(    "div.topnav a"    );  
/* div 태그의 class 속성이 topnav인 요소 내부에 있는 a 태그들을 모두 선택해 links 변수에 담는다 */

  links.length = 4
/* ???  */ 
  for (var i = 0; i < links.length; i++) {
	/*for문에서 onclick 이벤트를 구현하고*/
	   links[i].onclick = function (){ 
 	/* 이벤트는 각각의 링크가 클릭되었을 때 실행된다*/ 
		   for (var i = 0; i < links.length; i++) { 
			  links[i].classList.remove("active");
		/* 다른 링크가 활성화되어 있는 경우 그 링크의 active 클래스를 제거해 비활성화 시키기 위해 remove 함수를 사용한다. */ 
		  }  
		   this.classList.add("active");
		/* 클릭된 링크가 활성화되도록 하기 위해 classList.add를 사용해서 active라는 클래스를 현재 클릭한 요소에 추가한다. */ 
	   };
  }
</script>



10-2. 위의 10-1번 문제를 jquery로 코딩하세요. 

<div class="topnav">
   <a href="#">Button1</a>
   <a href="#">Button2</a>
   <a href="#"  class="active">Button3</a>
   <a href="#">Button4</a>
</div>

<script>
  var links = $("div.topnav a");

  links.on("click", function() {
    links.removeClass("active");
    $(this).addClass("active");
  });
</script>



11. 아래 js코딩에 대해서 각 라인 별로 주석을 달아서 설명하세요

1 2 3 4 5 6 [7] 8 9 >  >>

<style>
   .active{
     /*해당 페이지를 클릭한 상태인 'active'클래스를 가진 요소는*/ 
      background-color: dodgerblue; 
     /*배경색을 dodgerblue로 */ 
      color : white; 
     /* 글자색을 흰색으로 바꾼다. */
   }
</style>


<div class="pagination">
<!-- pagination 클래스를 가진 div태그에 --> 
   <a>1</a>
<!--각 페이지 목록을 a태그를 활용해 만들어 클릭할 수 있도록 만들고 --> 
   <a  class="active">[2]</a>
<!-- 2번 페이지에 active 클래스를 줘 클릭한 상태임을 나타낸다 -->
   :
</div> 

 
<script>
    $(".pagination a").click(function(event) { 
/* pagination 클래스 안에 있는 a를 클릭하면, 아래와 같은 함수를 실행한다 */ 
    	$(".pagination a").not(this).removeClass("active"); 
	/*  편의상 not(this)를 사용해 모든 a 태그에서 active 클래스를 제거하고  */ 
    	$(this).addClass("active");
	/*  클릭을 당한 요소(this)에 active 클래스를 추가한다. */ 
    });
</script>



12.  아래  css코딩을 설명하세요.
  #mySidenav a{ 
	   /* 아이디가 mySidenav인 요소안의 a 태그에 변화가 일어날때 */
    transition:0.5s ease;
	/* 진행 시간인 0.5초 동안 처음엔 천천히 시작하고 점점 빨라지다가 마지막엔 천천히 끝낸다. 	*/
  }
    
    <button>버튼 1</button>
  /* 버튼 요소를 하나 생성하고 */     

    <style>
	  button{
	    width:100px;
	    border:1px solid gray;
	    /* 해당 버튼의 넓이값인 100px, 테두리는 solid gray 색의 1px 테두리 둘다 트랜지션 대상이다. */  

	    transition:0.5s ease;
	/* 변화가 일어날때(hover) 진행 시간인 0.5초 동안 처음엔 천천히 시작하고 점점 빨라지다가 마지막엔 천천히 끝낸다. */
	  }
		  
	  button:hover{
	    width:200px; 
	/* 버튼 위로 마우스 포인터를 올리면 너비값이 200px로 커진다*/  	    
	  }
	</style>
        
13.  "문제01_결과.png"   css 적용하세요 .
    - 수업 자료 참조하지 말고 html, css, 등 모든 코딩을 해 보세요~
    - 마지막에 문제 푸세요~        
        
      죄송 ㅠㅠㅠ 자야해요 ㅠㅠㅠㅠ
        
        
        
        
        
        
        
        