package org.doit.ik.persistence;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import org.doit.ik.domain.MemberVO;
import org.doit.ik.domain.NoticeVO;
import org.doit.ik.mapper.MemberMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.stereotype.Repository;

import lombok.extern.log4j.Log4j;

@Repository
@Log4j
public class MemberDaoImpl implements MemberMapper {
	
	@Autowired
	private NamedParameterJdbcTemplate npJdbcTemplate;
    
   public MemberVO getMember(String id) throws ClassNotFoundException, SQLException
   {
      String sql = " SELECT * "
                     + " FROM MEMBER "
                     + " WHERE id = :id ";
      
      MapSqlParameterSource parameterSource = new MapSqlParameterSource();
      parameterSource.addValue("id", id);
       
      return this.npJdbcTemplate.queryForObject(sql, parameterSource, new BeanPropertyRowMapper<MemberVO> (MemberVO.class));
      
   }
   
   // 회원 가입 메서드 
   public int insert(MemberVO member) throws ClassNotFoundException, SQLException
   {
      String sql = "INSERT INTO MEMBER"
            + "( ID, PWD, NAME, GENDER, BIRTH, IS_LUNAR, CPHONE, EMAIL, HABIT, REGDATE) "
            + " VALUES( :id, :pwd, :name, :gender, :birth, :is_lunar, :cphone, :email, :habit, SYSDATE)";
       
      SqlParameterSource parameterSource = new BeanPropertySqlParameterSource(member);
      
      return this.npJdbcTemplate.update(sql, parameterSource);
      
   }
}