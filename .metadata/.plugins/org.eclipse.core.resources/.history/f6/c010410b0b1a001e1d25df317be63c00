<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
		
	<!-- 에러 : spring-security-4.2.xsd 수정. -->	
	<!--  이거 기본세팅 안잡아두면 오류남 ㄷㄷ  -->		
	
	<!-- css, js, image는 접근 제어 대상이 아니기에 이러한 페이지로의 요청은 보안필터 체인을 적용하지 않는다 -->
	<security:http pattern="/static/**" security="none"/>	
	<security:http pattern="/design/**" security="none"/>	
	<security:http pattern="/css/**" security="none"/>   
	<security:http pattern="/js/**" security="none"/>  
	
		<!--  접근 권한 설정 태그  -->
	  <!-- 예 
      <security:intercept-url pattern="/user/loginForm.htm" access="permitAll"/> 누구나 접근가능 
      <security:intercept-url pattern="/admin/manager/**" access="hasAutority('ROLE_MANAGER')"/>
      <security:intercept-url pattern="/member/**" access="isAuthenticated()"/> 글쓰기는 인증을 받아야지만 (즉 로그인을 해야지만) 쓸 수 있음 
      <security:intercept-url pattern="/**" access="permitAll"/>
       -->
	<security:http use-expressions="true"> 
		<security:intercept-url pattern="/customer/noticeReg.htm" access="isAuthenticated()" />
		<security:intercept-url pattern="/customer/noticeDel.htm" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/**" access="permitAll"/>
	    <security:form-login/>  
	</security:http>	
	
	<!-- 실제 인증을 처리하는 객체 -->
	<security:authentication-manager> 
		<security:authentication-provider> 
			<security:user-service>
				<security:user name="hong" authorities="ROLE_USER" password="{noop}1234"/>
				<security:user name="admin" authorities="ROLE_USER, ROLE_ADMIN, ROLE_MANAGER" password="{noop}1234"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager> 
</beans>
