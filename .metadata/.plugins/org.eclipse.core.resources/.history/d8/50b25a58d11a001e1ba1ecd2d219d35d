<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
		
	<!-- 기본적으로 제공되는 password encoder 객체 -->
	<bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	
	<!-- css, js, image는 접근 제어 대상이 아니기에 이러한 페이지로의 요청은 보안필터 체인을 적용하지 않는다 -->
	<security:http pattern="/static/**" security="none"/>	
	<security:http pattern="/design/**" security="none"/>	
	<security:http pattern="/css/**" security="none"/>   
	<security:http pattern="/js/**" security="none"/>  
	
      <!--  접근 권한 설정 태그  -->
	  <!-- 예 
      <security:intercept-url pattern="/user/loginForm.htm" access="permitAll"/> 누구나 접근가능 
      <security:intercept-url pattern="/admin/manager/**" access="hasAutority('ROLE_MANAGER')"/>
      <security:intercept-url pattern="/member/**" access="isAuthenticated()"/> 글쓰기는 인증을 받아야지만 (즉 로그인을 해야지만) 쓸 수 있음 
      <security:intercept-url pattern="/**" access="permitAll"/>
       -->
	<security:http use-expressions="true"> <!-- 이거 뭐해준거지 -->
		<security:intercept-url pattern="/customer/noticeReg.htm" access="isAuthenticated()" /> <!-- isAuthenticated() : 표현식  -->
		<security:intercept-url pattern="/customer/noticeDel.htm" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/**" access="permitAll"/> <!-- 위에 저거 제외하고 나머지는 다 허용 !   -->
		
<!-- 	<security:access-denied-handler error-page="/common/accessError.htm"/> 에러메세지로 돌리기 (4번) -->
		<security:access-denied-handler ref="customAccessDeniedHandler"/>  <!-- 에러페이지가 아니라 생성한 controller bean 객체를 넣어준다 -->
		
	  <!--   <security:form-login/>   -->
	  
	    <!-- 사용자 정의 로그인 페이지 등록 속성 : login-page  -->
	    <security:form-login 
	    	login-page="/joinus/login.htm"
	    	authentication-success-handler-ref="customLoginSuccessHandler"
	    	authentication-failure-url="/joinus/login.htm?error=true" 
	    	/>  
	    
	    <security:logout logout-url="/joinus/logout.htm" logout-success-url="/" invalidate-session="true"/>
	</security:http>	
	
	<!-- 실제 인증을 처리하는 객체 -->
	<security:authentication-manager> 
		<security:authentication-provider> 
			<security:jdbc-user-service data-source-ref=""/>
			<security:password-encoder ref="bCryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager> 
	
	<!-- csrf 토큰 사용하지 않겠다  -->
	<!--<security:csrf disabled="true"/>-->
	
</beans>
