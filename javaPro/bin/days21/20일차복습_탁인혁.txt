1. 2조 팀원들의 이름만 names 배열에 넣고
   내림차순으로 정렬해서 아래와 같이 출력하세요.
  String team02 = "3조_자바를 잡아  : [팀장]박민종(*), 심성환(*), 이진우(*), 홍찬기(*), 김예지, 하지예 , 탁인혁 (목요일)";
  ( 조건 : StringTokenizer 클래스 사용해서 잘라내기 )
  
  		String team02 = "3조_자바를 잡아  : [팀장]박민종(*), 심성환(*), 이진우(*), 홍찬기(*), 김예지, 하지예 , 탁인혁 (목요일)";
		StringTokenizer st = new StringTokenizer(team02.replaceAll("\\(\\*\\)|\\(.{3}\\)", "").replace("3조_자바를 잡아  : [팀장]", "").trim(), ", ");
		String [] names = new String[st.countTokens()];

		for (int i = 0; i < names.length; i++) {
			names[i] = st.nextToken();
		}	
		
		Arrays.sort(names, Collections.reverseOrder());	
		System.out.println(Arrays.toString(names));
  
2. days20.Ex12.java 파일을 읽어서 알파벳 대소문자 구분해서 
    알파벳 갯수와 막대그래프를 그리세요. 

 A(20) : ####################
 B(13) : ############
 Z(0)  :  
 a(2)   : ##
 z(3)   : ###
 
		String fileName = "days20\\Ex12.java";
		fileName = String.format("%s\\src\\%s", System.getProperty("user.dir"), fileName);
		
		int [] counts = new int[52];
		char one = '\s';
		int code = 0;
		try(FileReader fr = new FileReader(fileName)) {
			while ((code = fr.read()) != -1) {
				one = (char)code;
				if (Character.isUpperCase(one)) {
					int index = one - 'A';
					counts[index]++;
				} else if (Character.isLowerCase(one)) {
					int index = one - 'a' + 26;
					counts[index]++;
				}
			}
			for (int i = 0; i < 26; i++) {
				System.out.printf("%c(%02d) : %s\n", i+'A', counts[i], "#".repeat(counts[i]));
			}
			for (int i = 0; i < 26; i++) {
				System.out.printf("%c(%02d) : %s\n", i+'a', counts[i+26], "#".repeat(counts[i+26]));
			}
			
		} catch (IOException e) {
			e.printStackTrace();
		}
   
3.  잘라서 배열로 저장하기
  https://school.programmers.co.kr/learn/courses/30/lessons/120913
  
  class Solution {
    public String[] solution(String my_str, int n) {
        String[] answer = {};
        return answer;
    }
}
 