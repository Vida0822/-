1. foreach 문의 선언 형식을 적으세요.
	- 확장 for문
	- 반복문 for/foreach
	for(초기식;조건식;증감식){
	}
	for(자료형 변수명(임의로):배열 또는 컬렉션명){
	}

1-2.  국어 점수를 10개 저장할 kors 배열을 선언하고, 
        임의의 국어점수 (0~100 점)로 초기화하고 
        foreach문을 사용해서 출력하세요.
        
        int [] kors = new int[10];
        
        for(){
        	kors[i] = (int)(Math.random()*101);
        }
        for(int kor:kors){
        	System.out.println(kor);
        }

2. ASCII 문자코드값을 0~255 아래와 같이 출력하세요.
 '문자'(코드값) 
  : 
   'A'(65)
   :
   		// 0~30 제어문자
   		// 31~128 일반문자 - 숫자, 대소문자, [], () 등등
   		for (int i = 0; i < 256; i++) {
			System.out.printf("'%c'(%d)\n", (char)i, i);
		}
   
3.  아래 코딩의 [ ] 대괄호를 채워 넣으시고,  이유에 대해서 설명하세요. 
        int  i ;
		char one;
		System.out.print("> 한 문자 입력 ? "); 
		i = System.in.read();   
		one = (char)i;
		System.out.printf("one = '%c'\n", one); 
		[ System.in.skip(System.in.available()); ]
		System.out.print("> 한 문자 입력 ? "); 
		i = System.in.read();   
		one = (char)i;
		System.out.printf("one = '%c'\n", one);

       이유 ? 첫번째 문자를 입력한 뒤 엔터를 치면 CR(13) LF(10)이 버퍼에 들어가게 돼서
       		  그 다음에는 문자를 입력하지 않아도 CR(13)이 출력되게 된다
       		  이를 해결하기 위해 두번째 문자를 입력하기 전에 버퍼를 지우는 작업이 필요하다
        
4. 아래 코딩에 대해서 설명하세요 .
		boolean isXxxx()
    1)  Character.isDigit(one) -> 숫자인지 확인하는 함수(메서드)
    기본형 char -> 래퍼(Wrapper) 클래스 Character
    1. 기능: 숫자인지 체크하는 함수(메서드)
    2. 매개변수: char 한문자
    3. 리턴값: 숫자 -> true, 숫자 X -> false	[boolean]
    2) Character.isUpperCase(one) -> 대문자 true / false	[boolean]
	3) Character.isLowerCase(one) -> 소문자 true / false	[boolean]
	4) String.charAt(index) -> 문자열 -> 특정 위치(index)의 한 문자를 반환하는 함수(메서드)	[char]
	5) String.length() -> 문자열의 길이를 반환하는 함수(메서드)	[int]
	
5. 문자열 메시지를 입력받아서 입력받은 문자열의 한 문자씩 출력하세요. 
    String message;
    예) 
    [입력형식]
     > message input ? hello world ~
     [출력형식]
     'h'
     'e'
     'l'
     'l'
     ' '
     'w'
     'o'
     'r'
     'l'
     'd'
     ' '
     '~'
     String message;
		System.out.print("> message input ? ");
		Scanner scanner = new Scanner(System.in);
		message = scanner.nextLine();
		
		int mL = message.length();
		
		for (int i = 0; i < mL; i++) {
			System.out.printf("'%s'\n", message.charAt(i));
		}
     

6.   아래와 같은  별찍기  중첩 for 문  사용해서 코딩하고,  처리 과정에 대해서 설명하세요.
	 // ****
	 // ****
	 // ****
	 // ****
	 	for (int i = 1; i <= 4; i++) {
			for (int j = 1; j <= 4; j++) {
				System.out.print("*");
			}//for j
			System.out.println();
		}//for i
		
		i = 1 -> 1<=4(true)
						-> j = 1 -> 1<=4(true) -> * 출력 -> j++
						-> j = 2 -> 2<=4(true) -> * 출력 -> j++
						-> j = 3 -> 3<=4(true) -> * 출력 -> j++
						-> j = 4 -> 4<=4(true) -> * 출력 -> j++
						-> j = 5 -> 5<=4(false)
		-> 개행 -> i++
		-> i = 2 -> 2<=4(true)
						-> j = 1 -> 1<=4(true) -> * 출력 -> j++
						-> j = 2 -> 2<=4(true) -> * 출력 -> j++
						-> j = 3 -> 3<=4(true) -> * 출력 -> j++
						-> j = 4 -> 4<=4(true) -> * 출력 -> j++
						-> j = 5 -> 5<=4(false)
		-> 개행 -> i++
		-> i = 3 -> 3<=4(true)
						-> j = 1 -> 1<=4(true) -> * 출력 -> j++
						-> j = 2 -> 2<=4(true) -> * 출력 -> j++
						-> j = 3 -> 3<=4(true) -> * 출력 -> j++
						-> j = 4 -> 4<=4(true) -> * 출력 -> j++
						-> j = 5 -> 5<=4(false)
		-> 개행 -> i++
		-> i = 4 -> 4<=4(true)
						-> j = 1 -> 1<=4(true) -> * 출력 -> j++
						-> j = 2 -> 2<=4(true) -> * 출력 -> j++
						-> j = 3 -> 3<=4(true) -> * 출력 -> j++
						-> j = 4 -> 4<=4(true) -> * 출력 -> j++
						-> j = 5 -> 5<=4(false)
		-> 개행 -> i++
		-> i = 5 -> 5<=4(false)
		
		-> 종료
     
7. 두 정수 x, y을 입력받아서 두 정수 사이의 합 출력. 

	int x, y;
	System.out.print("> 두 정수 x, y 입력 ? ");
	Scanner scanner = new Scanner (System.in);
	x = scanner.nextInt();
	y = scanner.nextInt();
	
	int sum = 0;
	int min = n > m ? m : n;
	int max = n > m ? n : m;
	
	for (int i = min; max >= i; i++) {
		System.out.printf("%d+", i);
		sum += i;
	}
	System.out.printf("\b=%d\n", sum);

8. 별찍기
	 // *
	 // **
	 // ***
	 // **** 		      
		for (int i = 1; i <= 4; i++) {
			for (int j = 1; j <= i; j++) {
				System.out.print("*");
			}//for j
			System.out.println();
		}//for i
          













