1-1. Date 타입을 Calendar 타입으로 변환하는 방법에 대해서 설명하세요.  
	Calendar 클래스의 setTime(Date) 이용
		Date d = new Date();
		Calendar c = Calendar.getInstance();
		c.setTime(d);	
1-2. Calendar 타입을  Date 타입으로 변환하는 방법에 대해서 설명하세요.    
	Calendar 클래스의 getTimeInMillis() 이용
		Calendar c = Calendar.getInstance();
		Date d = new Date(c.getTimeInMillis());		
		
2. SimpleDateFormatter 클래스에 대해서 설명하세요. 
	원하는 날짜 형식으로 Date와 Calendar를 출력하는 형식화 클래스이다
	자주 사용하는 패턴기호로는 y(년도), M(월), d(일), E(요일) 등이 있다
	
3-1. java.time 패키지에 대해서 설명하세요. 
	JDK 1.8에 새로 추가된 날짜, 시간 관련 클래스들이 담겨있는 패키지이다
3-2. java.time패키지의 4가지 하위 패키지에 대해서 설명하세요 .
	java.time.chrono
	java.time.format
	java.time.temporal
	java.time.zone
3-3. java.time 패키지의 핵심 클래스에 대해서 설명하세요. 
	LocalDate 클래스 - 날짜
	LocalTime 클래스 - 시간
	LocalDateTime 클래스 - 날짜 + 시간
	ZonedDateTime 클래스 - 날짜 + 시간 + 시간대
3-4. Period, Duration 클래스에 대해서 설명하세요.
	Period 클래스 - 날짜와 날짜 사이의 간격
	Duration 클래스 - 시간과 시간 사이의 간격
3-5. TemporalUnit 인터페이스와  ChronoUnit 열거형에 대해서 설명하세요 . 
	TemporalUnit - 날짜와 시간의 단위를 정의해 놓은 인터페이스
	ChronoUnit - TemporalUnit 인터페이스를 구현한 것
3-6. TemporalField 인터페이스와 ChronoField 열거형에 대해서 설명하세요 .
	TemporalField - 날짜와 시간의 필드를 정의해 놓은 인터페이스
	ChronoField - TemporalField 인터페이스를 구현한 것
3-7. java.time 패키지의 핵심 클래스의 객체 생성 방법에 대해서 설명하세요 . 
	now() - 현재 시스템의 객체를 생성한다
	of() - 사용자가 원하는 시스템의 객체를 생성한다
	
4. 개강일(2023.1.26)로부터 100일 되는 날짜를 출력하세요. 
   (조건: LocalDate 클래스 사용.) 


